@page

@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<style>
    .header {
        width: 100vw;
        padding: 20px; /* Adjusted padding for better visual spacing */
        overflow-x: hidden;
        text-align: center;
        background-color: #FFB6C1;
        color: white;
        font-size: 20px;
        width: 100%;
        top: 5%;
        left:0; 
        box-shadow: 0px 4px 2px -2px gray;
        position: absolute;
        
        font-family: Arial, sans-serif;
       
    }
    .content-container {
        
        padding-top: 8%;
        width: 100%;
        top: 5%;
        left: 0;
        
       
        text-align: center;
        font-family: Arial, sans-serif;
        margin: 0;
    }

    

    .MBTI-intro img {
        display: inline-block;
        width: 250ppx;
        height: 250px;
        background-color: #f1f1f1;
        
           
           
        }
        .content-container h1 {
            color: #FFB6C1;
        }

        .content-container h2 {
            color: #FF69B4;
        }

        .content-container select,
        .content-container input,
        .content-container button {
            margin: 10px 0;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 1em;
        }

        .content-container button {
            background-color: #FFB6C1;
            color: white;
            border: none;
            cursor: pointer;
        }

            .content-container button:hover {
                background-color: #FF99AA;
            }

        .content-container .result {
            margin-top: 20px;
            font-size: 1.2em;
            color: #FF69B4;
        }

        .content-container .link {
            margin-top: 20px;
            color: #FF69B4;
            text-decoration: none;
        }

            .content-container .link:hover {
                text-decoration: underline;
            }
</style>
<div class="header"> 
    <h1 class="display-4">MBTI MatchMaker</h1>
    <p>Discover the ideal personality match for your next plans<p>
</div>
<div class="content-container">
    <div class="MBTI-intro">
        <h2>What is the MBTI?</h2>
        <p>The Myers-Briggs Type Indicator (MBTI) is a widely used personality assessment tool. It categorizes individuals into 16 personality types based on their preferences in four key areas: extraversion/introversion, sensing/intuition, thinking/feeling, and judging/perceiving.</p>
        <div id="mbti-images">
            <img src="@Url.Content("~/images/analyst.jpg")" alt="Image 1" >
            <img src="@Url.Content("~/images/diplomat.jpg")" alt="Image 2" >
            <img src="@Url.Content("~/images/explorer.jpg")" alt="Image 3" >
            <img src="@Url.Content("~/images/sentinel.jpg")" alt="Image 4">
        </div>


    </div>
    
    <form method="post">
        <label for="mbti">Select Your MBTI:</label>
        
        <select id="personalityType" name="personalityType">
            <option value="INFJ">INFJ</option>
            <option value="INFP">INFP</option>
            <option value="ENFJ">ENFJ</option>
            <option value="ENTP">ENTP</option>
            <option value="INTJ">INTJ</option>
            <option value="ENTJ">ENTJ</option>
            <option value="ISFP">ISFP</option>
            <option value="ESFP">ESFP</option>
            <option value="ISTJ">ISTJ</option>
            <option value="ISFJ">ISFJ</option>
            <option value="ESTJ">ESTJ</option>
            <option value="ESFJ">ESFJ</option>
            <option value="ISTP">ISTP</option>
            <option value="ESTP">ESTP</option>
            <option value="ENFP">ENFP</option>
            <option value="ENTP">ENTP</option>
            <!-- Add the remaining MBTI types as needed -->
        </select><br>
        
        <label for="activity">Activity:</label>
        <input type="text" id="activity" name="activity" value="@Model.Activity" />
        <br />
        <input type="hidden" name="clickCount" value="@Model.ClickCount" />

        <button onclick="showMBTI(event)">Find Your Match</button>
        
    
        </form>
    

    <div class="result" id="result"></div>

    <p>Don't know your MBTI?</p>
    <a href="https://www.16personalities.com/free-personality-test" class="personality-link">Click here to take the free Myers-Briggs Personality Test!</a>
    <p>Come back when you find out!</p>
    


    <script>

    
    const personalityTypes = ["INTJ", "ENTP", "INFJ", "ENFP", "ISTJ", "ISFJ", "ESTJ", "ESFJ", "ISTP", "ISFP", "ESTP", "ESFP", "INTP", "INFP", "ENTJ", "ENFJ"];
    
        function showMBTI(event) {
            
            const activity = document.getElementById('activity').value.toLowerCase();
            const personalityType = document.getElementById('personalityType').value;
            //event.preventDefault();



            //logData(mbti, activity);

            if (activity.trim() === "") {
                alert("Please enter an activity.");
                return;
            }

            const selectedTypes = [];
            while (selectedTypes.length < 2) {
                const randomType = personalityTypes[Math.floor(Math.random() * personalityTypes.length)];
                if (!selectedTypes.includes(randomType)) {
                    selectedTypes.push(randomType);
                }
            }

            // Display the results
            const resultDiv = document.getElementById('result');
            resultDiv.innerText = `Your ideal match for this activity is: ${selectedTypes.join(', ')}`;
            
        }
    function findMatch(event) {
           // const personalityType = document.getElementById('mbti').value; //only works when mbti = mbti
       // event.preventDefault(); // This will prevent the default form submission behavior

       // const activity = document.getElementById('activity').value.toLowerCase();


           
        
        //logData(mbti, activity);

       

            // Randomly select two different personality types
       

            
        // Placeholder logic for finding a match - this should be replaced with your actual logic
            

        /*
            let matches = [];
            let activity = false;
        if (activity === 'hiking') {
                found = true;
                if (mbti === 'INFJ') {
                    matches = ['ENFJ', 'ISTP'];
                } else if (mbti === 'ENFJ') {
                    matches = ['INFJ', 'ENFJ'];
                } else if (mbti === 'ISTJ') {
                    matches = ['ESFP', 'ENTP'];
                } else if (mbti === 'INFP') {
                    matches = ['INTP', 'ISTP'];
                } else {
                    matches = ['ISTJ'];
                }
        } else {
                matches = ['ISFP']; // default match if no specific logic is found
            }
        if (activity === 'swimming') {
            found = true;
            if (mbti === 'INFJ') {
                matches = ['ENFP', 'INTJ'];
            } else if (mbti === 'ENFJ') {
                matches = ['INFP', 'ENFJ'];
            } else if (mbti === 'ISTJ') {
                matches = ['ESFJ', 'ENTP'];
            } else if (mbti === 'INFP') {
                matches = ['INTP', 'ISFP'];
            } else {
                matches = ['ISTJ'];
            }
        } else if (activity === 'cooking') {
            found = true;
            if (mbti === 'INFJ') {
                matches = ['ENFJ', 'ISTP'];
            } else if (mbti === 'ENFJ') {
                matches = ['INFJ', 'ENFJ'];
            } else if (mbti === 'ISTJ') {
                matches = ['ESFP', 'ENTP'];
            } else if (mbti === 'INFP') {
                matches = ['INTP', 'ISTP'];
            } else {
                matches = ['ENFJ'];
            }
        } else if (activity === 'reading') {
            found = true;
            if (mbti === 'INFJ') {
                matches = ['ENFP', 'INTJ'];
            } else if (mbti === 'ENFJ') {
                matches = ['INFP', 'ENFJ'];
            } else if (mbti === 'ISTJ') {
                matches = ['ESFJ', 'ENTJ'];
            } else if (mbti === 'INFP') {
                matches = ['INTP', 'ISFP'];
            } else {
                matches = ['ISTJ'];
            }
        } else if (activity === 'gardening') {
            found = true;
            if (mbti === 'INFJ') {
                matches = ['ENFJ', 'ISTP'];
            } else if (mbti === 'ENFJ') {
                matches = ['INFJ', 'ENFJ'];
            } else if (mbti === 'ISTJ') {
                matches = ['ESFP', 'ENTP'];
            } else if (mbti === 'INFP') {
                matches = ['INTP', 'ISTP'];
            } else {
                matches = ['ISTJ'];
            }
        } else if (activity === 'traveling') {
            found = true;
            if (mbti === 'INFJ') {
                matches = ['ENFJ', 'ISTJ'];
            } else if (mbti === 'ESFJ') {
                matches = ['INFP', 'ISTP'];
            } else if (mbti === 'ISTJ') {
                matches = ['ESFJ', 'ENTJ'];
            } else if (mbti === 'ENFP') {
                matches = ['INTP', 'ISFP'];
            } else {
                matches = ['ISTJ'];
            }
        } else {
            matches = ['INFJ']; // default match if no specific logic is found
        }
        if (found == false){
            matches = ['ENFJ'];
        }
        */
            
        }
        let clickCount = 0;
        function logData(personalityType, activity) {
            const data = {
                clickCount: ++clickCount,
                personalityType: personalityType,
                activity: activity
            };

            console.log("Logging Data:", data);


            fetch('/Index?handler=LogData', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            }).then(response => {
                if (!response.ok) {
                    console.error("Failed to log data");
                }
            }).catch(error => {
                console.error("Error logging data: ", error);
            });

        }
    

    
    </script>

</div>
